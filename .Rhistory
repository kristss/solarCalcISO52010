I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi) %>% View
library(solarCalcISO52010)
df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi) %>% View
library(solarCalcISO52010)
df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi) %>% View
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
plot(df$I_tot_s4, df2$I_tot_s4)
plot(df$I_tot_s1, df2$I_tot_s1)
plot(df$I_tot_s2, df2$I_tot_s2)
plot(df$I_tot_s1, df2$I_tot_s1)
plot(df$I_tot_s1 - df2$I_tot_s1)
tibble(a=df$I_tot_s1 - df2$I_tot_s1, datetime=df$datetime)
tibble(a=df$I_tot_s1 - df2$I_tot_s1, datetime=df$datetime) %>% View()
tibble(a=df$I_tot_s1 - df2$I_tot_s1, datetime=1:8760) %>% View()
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
0.4339*180/pi
1.393*180/pi
library(solarCalcISO52010)
alpha_sol = alpha_sol*180/pi); df2 %>% View()
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
solarCalcISO52010:::test_interp(6.16)
solarCalcISO52010:::test_interp(6.2)
solarCalcISO52010:::test_interp(6.19)
solarCalcISO52010:::test_interp(6.16)
(4.5 + 6.2)/2
(4.5 + 2.8)/2
(1.95 + 2.8)/2
(1.95 + 1.5)/2
(1.23 + 1.5)/2
(1.23 + 1.065)/2
library(solarCalcISO52010)
solarCalcISO52010:::test_interp(6.19)
solarCalcISO52010:::test_interp(6.2)
library(solarCalcISO52010)
solarCalcISO52010:::test_interp(6.2, 1)
solarCalcISO52010:::test_interp(6.16, 1)
solarCalcISO52010:::test_interp(6.16, 0)
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
tidyISO52010 <- function(
.df, lng, lat, tz, t_shift=NULL,
surfaceAzimuths = c(180, 90, 0.0, -90), surfaceTilts = rep(90, length(surfaceAzimuths)),
col_datetime="datetime", col_G_dir = "G_dir", col_G_dif="G_dif", col_albedo="albedo",
albedo=NULL, interp_parez=1
) {
if (!inherits(.df, "data.frame")) stop("First argument, \".df\", need to inherit from data.frame class")
if (!exists(col_datetime, .df)) stop("Column  \"", col_datetime, "\" doesn't exist in .df" )
if (!exists(col_G_dir, .df)) stop("Column  \"", col_G_dir, "\" doesn't exist in .df" )
if (!exists(col_G_dif, .df)) stop("Column  \"", col_G_dif, "\" doesn't exist in .df" )
if (!inherits(.df[, col_datetime][[1]], "POSIXt")) stop("Column \"", col_datetime, "\" need to inherit from POSIXt class")
if (!exists(col_datetime, .df)) stop("Column  \"", col_datetime, "\" doesn't exist in .df" )
if (is.null(albedo) && !exists(col_albedo, .df)) stop("Either .df need an \"albedo\" column or the albedo need to be specified with the albedo argument")
if (length(surfaceAzimuths)!=length(surfaceAzimuths)) stop("Arguments surfaceAzimuths and surfaceAzimuths need to be of same length ")
.df <- .df %>% add_dayOfYear_hourOfDay()
if (!is.null(albedo)) .df[ , col_albedo] <- albedo
if (is.null(t_shift)) t_shift <- (.df$n_hour[2] - .df$n_hour[1]) / 2
# converti degrees to radians
surfaceAzimuths <- surfaceAzimuths*pi/180
surfaceTilts<- surfaceTilts*pi/180
res <- rcpp_ISO52010(
lng=lng*pi/180, lat=lat*pi/180, tz=tz, t_shift=t_shift,
surfaceAzimuths = surfaceAzimuths, surfaceTilts = surfaceTilts, # north, west, south, east
n_day=.df$n_day, n_hour=.df$n_hour,
G_dir=as.vector(.df[, col_G_dir]), G_dif=as.vector(.df[, col_G_dif]),
albedo=as.vector(.df[, col_albedo]), interp_parez=interp_parez
)
.df$alpha_sol <- res[,1]
N <- length(surfaceAzimuths)
for (n in 1:N) {
.df[ , paste0("I_tot_dir_s", n)] = res[,n+1]
.df[ , paste0("I_tot_dif_s", n)] = res[,N+n+1]
}
.df
}
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30)) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
plot(df$I_tot_s1 - df2$I_tot_s1)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30), interp_parez = 0) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
plot(df$I_tot_s1 - df2$I_tot_s1)
tibble(a=df$I_tot_s1 - df2$I_tot_s1, datetime=1:8760) %>% View()
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30), interp_parez = 0) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
library(solarCalcISO52010)
solarCalcISO52010:::test_interp(2.798, 0)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30), interp_parez = 1) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
plot(df$I_tot_s1 - df2$I_tot_s1)
sum(df$I_tot_s1 - df2$I_tot_s1)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30), interp_parez = 0) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
sum(df$I_tot_s1 - df2$I_tot_s1)
sum(df$I_tot_s1 - df2$I_tot_s1) / medel(df$I_tot_s1)
sum(df$I_tot_s1 - df2$I_tot_s1) / mean(df$I_tot_s1)
sum(df$I_tot_s1 - df2$I_tot_s1)
sum((df$I_tot_s1 - df2$I_tot_s1)^2)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30), interp_parez = 1) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
sum((df$I_tot_s1 - df2$I_tot_s1)^2)
plot(df$I_tot_s1 - df2$I_tot_s1)
plot(df$I_tot_s2 - df2$I_tot_s2)
plot(df$I_tot_s3 - df2$I_tot_s3)
plot(df$I_tot_s4 - df2$I_tot_s4)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30), interp_parez = 0) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi); df2 %>% View()
plot(df$I_tot_s4 - df2$I_tot_s4)
plot(df$I_tot_s3 - df2$I_tot_s3)
plot(df$I_tot_s2 - df2$I_tot_s2)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_parez = 0) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
test_that("solar altidue (alpha_sol) matches with validation data", {
expect_true(sum(abs(df2$alpha_sol - df$alpha_sol))/nrow(df) < 0.03)
})
test_that("solar altidue (alpha_sol) matches with validation data", {
expect_true(mean(abs(df2$alpha_sol - df$alpha_sol)) < 0.03)
})
mean(abs(df2$alpha_sol - df$alpha_sol)
)
mean(df2$I_tot_s1 - df$I_tot_s1)
mean(df2$I_tot_s2 - df$I_tot_s1)
mean(df2$I_tot_s2 - df$I_tot_s2)
mean(df2$I_tot_s3 - df$I_tot_s3)
mean(df2$I_tot_s4 - df$I_tot_s3)
mean(df2$I_tot_s4 - df$I_tot_s4)
expect_true(abs(mean(df2$I_tot_s1 - df$I_tot_s1)) < 0.03)
expect_true(abs(mean(df2$I_tot_s1 - df$I_tot_s1)) < 0.03)
expect_true(abs(mean(df2$I_tot_s2 - df$I_tot_s2)) < 0.03)
expect_true(abs(mean(df2$I_tot_s3 - df$I_tot_s3)) < 0.03)
expect_true(abs(mean(df2$I_tot_s4 - df$I_tot_s4)) < 0.03)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_parez = 1) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
test_that("solar altidue (alpha_sol) matches with validation data", {
expect_true(mean(abs(df2$alpha_sol - df$alpha_sol)) < 0.03)
})
test_that("total solar irradiance matches with validation data", {
expect_true(abs(mean(df2$I_tot_s1 - df$I_tot_s1)) < 0.03)
expect_true(abs(mean(df2$I_tot_s2 - df$I_tot_s2)) < 0.03)
expect_true(abs(mean(df2$I_tot_s3 - df$I_tot_s3)) < 0.03)
expect_true(abs(mean(df2$I_tot_s4 - df$I_tot_s4)) < 0.03)
})
abs(mean(df2$I_tot_s2 - df$I_tot_s2)
)
abs(mean(df2$I_tot_s4 - df$I_tot_s4))
30/500
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_perez = 0) %>% # the validation data use binned Perez data
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
devtools::document()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_perez = 0) %>% # the validation data use binned Perez data
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
devtools::document()
library(solarCalcISO52010)
devtools::document()
Rcpp::compileAttributes()
devtools::document()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_perez = 0) %>% # the validation data use binned Perez data
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
devtools::document()
library(solarCalcISO52010)
df2 <- df1 %>% tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_perez = 0) %>% # the validation data use binned Perez data
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
df2 <- df1 %>% solarCalcISO52010:::tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_perez = 0) %>% # the validation data use binned Perez data
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
test_that("solar altidue (alpha_sol) matches with validation data", {
expect_true(mean(abs(df2$alpha_sol - df$alpha_sol)) < 0.03)
})
test_that("total solar irradiance matches with validation data", {
# There are some deviation due to small differences in numerical precision between
# this calculation and the validation data calculated with Excel.
# Espically the "eps", used for the Perez table, is sensitive.
# An small change in "eps" can result in up to 10 % deviations in I_tot.
expect_true(abs(mean(df2$I_tot_s1 - df$I_tot_s1)) < 0.03)
expect_true(abs(mean(df2$I_tot_s2 - df$I_tot_s2)) < 0.03)
expect_true(abs(mean(df2$I_tot_s3 - df$I_tot_s3)) < 0.03)
expect_true(abs(mean(df2$I_tot_s4 - df$I_tot_s4)) < 0.03)
})
library(solarCalcISO52010)
tools::package_native_routine_registration_skeleton(".")
library(solarCalcISO52010)
devtools::document()
devtools::document()
tools::package_native_routine_registration_skeleton(".")
devtools::document()
library(solarCalcISO52010)
df2 <- df1 %>% solarCalcISO52010:::tidyISO52010(
lng=-104.86, lat=39.76, tz=-7, t_shift=0.5,
surfaceAzimuths = c(90, -90, -35, 45), surfaceTilts = c(90, 90, 0, 30),
interp_perez = 0) %>% # the validation data use binned Perez data
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2,
I_tot_s3 = I_tot_dir_s3 + I_tot_dif_s3,
I_tot_s4 = I_tot_dir_s4 + I_tot_dif_s4,
alpha_sol = alpha_sol*180/pi)
library(camsRad)
cams_set_user("lukas.lundstrom@kfast.se")
library(solarCalcISO52010)
df_15m <- cams_get_radiation(60, 16, "2014-01-01", "2014-12-31", "PT15M")
cams_set_user("lukas.rokka@gmail.com")
df_15m <- cams_get_radiation(60, 16, "2014-01-01", "2014-12-31", "PT15M")
df_01H <- cams_get_radiation(60, 16, "2014-01-01", "2014-12-31", "PT01H")
df_15m
df_15m %>% as.tible()
df_15m %>% as_tible()
df_15m %>% as_tibble()
lat=60, lng=16, tz=0, t_shift=0.125,
surfaceAzimuths = c(90, -90), surfaceTilts = c(90, 90),
interp_perez = 1) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2)
df_15m2 <- df_15m %>% solarCalcISO52010:::tidyISO52010(
lat=60, lng=16, tz=0, t_shift=0.125,
surfaceAzimuths = c(90, -90), surfaceTilts = c(90, 90),
interp_perez = 1) %>%
mutate(I_tot_s1 = I_tot_dir_s1 + I_tot_dif_s1,
I_tot_s2 = I_tot_dir_s2 + I_tot_dif_s2)
df_15m
df_15m %>% as_tibble()
library(solarCalcISO52010)
devtools::document()
df_15m %>% as_tibble()
df_15m <- solarCalcISO52010:::tidyISO52010(
df_15m,
lat=60, lng=16, tz=0, t_shift=0.125,
surfaceAzimuths = c(90, -90), surfaceTilts = c(90, 90),
interp_perez = 1,
col_G_dir = "BNI", col_G_dif = "DHI"
)
df_15m <- solarCalcISO52010:::tidyISO52010(
df_15m,
lat=60, lng=16, tz=0, t_shift=0.125,
surfaceAzimuths = c(90, -90), surfaceTilts = c(90, 90),
albedo=0.2, interp_perez = 1,
col_G_dir = "BNI", col_G_dif = "DHI"
)
df_15m$I_tot_s1 = df_15m$I_tot_dir_s1 + df_15m$I_tot_dif_s1
df_15m$I_tot_s2 = df_15m$I_tot_dir_s2 + df_15m$I_tot_dif_s2
df_15m %>% as_tibble()
df_01H <- solarCalcISO52010:::tidyISO52010(
df_01H,
lat=60, lng=16, tz=0, t_shift=0.125,
surfaceAzimuths = c(90, -90), surfaceTilts = c(90, 90),
albedo=0.2, interp_perez = 1,
col_G_dir = "BNI", col_G_dif = "DHI"
)
df_01H <- solarCalcISO52010:::tidyISO52010(
df_01H,
lat=60, lng=16, tz=0, t_shift=0.5,
surfaceAzimuths = c(90, -90), surfaceTilts = c(90, 90),
albedo=0.2, interp_perez = 1,
col_G_dir = "BNI", col_G_dif = "DHI"
)
df_01H$I_tot_s1 = df_01H$I_tot_dir_s1 + df_01H$I_tot_dif_s1
df_01H$I_tot_s2 = df_01H$I_tot_dir_s2 + df_01H$I_tot_dif_s2
df_01H$I_tot_s1
medel(df_01H$I_tot_s1)
mean(df_01H$I_tot_s1)
mean(df_01H$I_tot_s2)
mean(df_01H$I_tot_s1)/mean(df_01H$I_tot_s1)
mean(df_01H$I_tot_s1)/mean(df_01H$I_tot_s2)
mean(df_15m$I_tot_s1)/mean(df_15m$I_tot_s2)
summa(df_15m$I_tot_s1)
sum(df_15m$I_tot_s1)
mean(df_15m$I_tot_s1)/mean(df_01H$I_tot_s2)
mean(df_15m$I_tot_s1/4)/mean(df_01H$I_tot_s2)
plot((df_15m$I_tot_s1)
plot(df_15m$I_tot_s1)
plot(df_01H$I_tot_s1)
mean(df_15m$I_tot_s1*4)/mean(df_01H$I_tot_s2)
library(solarCalcISO52010)
install.packages("yaml")
devtools::document()
intsallr
installr
installr::updateR()
